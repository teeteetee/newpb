doc
html(lang='en')
head
    meta(charset='utf-8')     
    meta(http-equiv='X-UA-Compatible', content='IE=edge')     
    meta(name='viewport', content='width=device-width, initial-scale=1')
    // The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags
    title C     
    link(rel='icon', href='', sizes='16x16', type='image/png')
    // Bootstrap
    link(href='/bootstrap/css/bootstrap.min.css', rel='stylesheet')     
    meta(liber de amicitia est)
    // HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries
    // WARNING: Respond.js doesn't work if you view the page via file://
    //if lt IE 9
      script(src='https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js')
        
      script(src='https://oss.maxcdn.com/respond/1.4.2/respond.min.js')     
    style.
      #leftpanel {
      border-right:1px solid #eee;
      min-width:100px;
      padding-top:25px;
      }
      #mainframe {
      -webkit-box-shadow: -9px 0px 40px 0px #c7c7c7;
      -moz-box-shadow: -9px 0px 40px 0px #c7c7c7;
      box-shadow: -9px 0px 40px 0px #c7c7c7;
      margin-top:50px;
      background-color:white;
      border-radius:10px;
      margin-bottom:30px;
      }
      #userimg {
      -webkit-box-shadow: -9px 0px 40px 0px #c7c7c7;
      -moz-box-shadow: -9px 0px 40px 0px #c7c7c7;
      box-shadow: -9px 0px 40px 0px #c7c7c7;
      width:100%;
      }
      .emptybook {
      padding-left:23px;
      }
      .book h4 {
      color:black;
      }
      .book:hover {
      background-color:#eee;
      }
      .book {
      padding-top:10px;
      padding-bottom:10px;
      border-bottom:1px solid #eee;
      }
      #booklist {
      background-color:#F7F7F7;
      border-top-right-radius:10px;
      border-bottom-right-radius:10px;
      }
      .list {
      overflow:auto;
      min-height:500px;
      max-height:70vh;
      }
      #signup {
        padding-top:50px;
        padding-bottom:100px;
      }
      @media (max-width: 767px) {
      #mainframe {
      margin-top:0px;
      }
      #userimg {
      width:130px;
      height:130px;
      }
      .book {
      border-bottom:1px solid #eee;
      text-align:center;
      padding-left:15px;
      padding-right:15px;
      }
      .emptybook {
      margin-left:0px;
      }
      #leftpanel {
      border-right:0px;
      }
      #booklist {
      border-bottom-left-radius:10px;
      }
      
      .list {
        max-height:inherit;
      }
      .paddgroup {
      padding-left:25px;
      padding-right:25px;
      }
      #signup {
        background-color:#333;
      }
      }
      @media (max-width: 992px) {
      #booklist {
      border-bottom-left-radius:10px;
      }
      #userimg {
      width:150px;
      height:150px;
      }
      .things{
      padding-top:50px;
      }
      }
      @font-face {
      font-family:roboto-thin;
      src: url('/bootstrap/fonts/Roboto-Thin.ttf');
      }
      @font-face{
      font-family:proxima;
      src:url('/bootstrap/fonts/ProximaNova-Reg-webfont.woff');
      }
      @font-face{
      font-family:boldproxima;
      src:url('/bootstrap/fonts/ProximaNova-Sbold-webfont.woff');
      }
      body {
      background-color:#eee;
      font-family:roboto-thin;
      }
      h1{
      font-family:intro;
      }
      h2{
      font-family:boldproxima;
      text-transform:uppercase;
      }
      h4 {
      color:gray;
      }
      .thin {
      height:85%;
      }
      .inleftblock {
      border-bottom:1px solid #eee;
      color:gray;
      }
      .inleftblock:hover {
      background-color: #333;
      color:white;
      }
      .inleftblock:hover h4 {
      color:white;
      }
      .glyphicon {
      margin-right:5px;
      }
      .btncorr {
      font-family:boldproxima;
      text-transform:uppercase;
      }
      .img-circle {
      -webkit-filter: brightness(0.9) contrast(1.2) saturate(1.2);
      -moz-filter: brightness(0.9) contrast(1.2) saturate(1.2);
      filter:brightness(0.9) contrast(1.2) saturate(1.2);
      }
      #heyopen {
      -webkit-box-shadow: inset 0px 7px 17px -9px rgba(0,0,0,0.75);
      -moz-box-shadow: inset 0px 7px 17px -9px rgba(0,0,0,0.75);
      box-shadow: inset 0px 7px 17px -9px rgba(0,0,0,0.75);
      }
      .btn {
      font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
      }
      .btn-success {
      background-color:#23BBA7;
      }
      .btn-success:hover {
      background-color:#1F9E8E;
      } 
      a:hover, a:focus, a:active {
        text-decoration:none !important;
        color:inherit !important;
      }
      p{
        text-indent:20px;
        font-size:18px;
      }
      .discussion {
        border-bottom:1px solid #ddd;
        padding-top:10px;
        padding-bottom:10px;
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        background-color:white;
      }
      .discussion:hover {
        background-color:#f3f3f3;
      }
      .media-body, .media-left, .media-right {
      vertical-align: middle;
      }
      .media-heading{
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
      }
      .media {
        margin-left:30px;
      }
  body
    .container
      #mainframe.row.cuttop
        #leftpanel.thun.col-md-2
          #emptyavatar(style='width:150px;height:150px;margin:auto;border:7px dotted #eee;bakcground-color:white;border-radius:50%;')
          h3(id='numbers' style='text-align:center;')
          .row(style='border-top:1px solid #eee;') 
          .inleftblock.row.visible-lg.visible-md
            .col-xs-12
              a(href='/')
                h4  Lists   
          .inleftblock.row.visible-lg.visible-md(style='background-color:#ddd;color:white;')
            .col-xs-12
              a(href='/chat')
                h4  Messages       
          .inleftblock.row.visible-lg.visible-md
            .col-xs-12
              a(href='/people')
                h4  People 
          .inleftblock.row.visible-lg.visible-md
            .col-xs-12
              a(href='/settings')
                h4  Settings     
          .inleftblock.row.visible-lg.visible-md
            .col-xs-12
              a(href='/about')
                h4  About   
          .inleftblock.row.visible-lg.visible-md
            .col-xs-12
              a(href='/logout')
                h4  Logout      
        #booklist.thun.col-md-10
          .row.visible-lg.visible-md(style='background-color:white;border-top-right-radius:10px;border-bottom:1px solid #ddd;')
            .col-xs-12
              h2(style='color:#6CB7B7;') User №#{user}                       
              h4(style='color:#B2D4D4;font-family:boldproxima;text-transform:uppercase;')  Conversations 
           #mobilehead.row.visible-sm.visible-xs(style='background-color:#333;box-shadow: 0 5px 25px -5px #333;') 
            .col-xs-12(style='min-width:100px;text-align:center;padding-bottom:10px;')
              h2(style='color:white;text-align:center;') user №#{user} 
              h4(style='color:gray;') Conversations
          .list.row
            #discussions.col-xs-12
    // jQuery (necessary for Bootstrap's JavaScript plugins)
    script(src='https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js')
    // Include all compiled plugins (below), or include individual files as needed
    script(src='js/bootstrap.min.js')  
    script.
      //TO DO userpics seem to be cut from the sides, look into that
      var user = !{JSON.stringify(done)};
      user= JSON.parse(user);
      if(user.userpic){
        $('#emptyavatar').remove();
        $('#leftpanel').prepend("<img id='userimg' class='img-circle center-block' src='/userpics/id"+user.uid+user.picext+"'></img>");
        $('#numbers').append(user.readbooks+"<span style='color:#ddd;'> / </span>"+user.seenmovies);
      } 
      var discussions = [#{discussions}];
      var counter=0;
      getdisc(discussions[counter],counter);
      function getavatar(uid,discid,iter) {
      console.log('getting avatar for: '+uid);
      avatarrequest = new XMLHttpRequest();
      avatarrequest.onreadystatechange = function () {
      var DONE = this.DONE || 4;
      if (this.readyState === DONE){
      var parsed = JSON.parse(avatarrequest.responseText);
      counter++;
      if(counter<discussions.length)
      {getdisc(discussions[counter],counter)}
      if(parsed.trouble === 1)
      {
      // TO DO do somewthing here
      //var insert ="<div class='col-xs-3'><div class='emptyavatar' style='width:50px;height:50px;margin:10px;border:7px dotted #bbb;bakcground-color:white;border-radius:50%;'></div></div>";
      eval("$('#img_cid"+discid+"').attr('src','/images/emptyuserpic.png');");
      }
      else {
      if(parsed.mtext==='emptypic'){
        console.log('EMPTY AVATAR');
       eval("$('#img_cid"+discid+"').attr('src','/images/emptyuserpic.png');");
      }
      else 
      {
        console.log('HAS AVATAR');
      eval("$('#img_cid"+discid+"').attr('src','/userpics/id"+uid+"_small"+parsed.ext+"');");
      }
      }
      }
      };
      avatarrequest.open('POST', '/getavatar/'+uid, true);
      avatarrequest.setRequestHeader('X-Requested-With', 'XMLHttpRequest');  // Tells server that this call is made for ajax purposes.
      avatarrequest.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
      //Most libraries like jQuery/Prototype/Dojo do this
      avatarrequest.send();
      }
      //------------------//
      function getdisc(discid,iter) {
      console.log('getting discifno: '+discid);
      request = new XMLHttpRequest();
      request.onreadystatechange = function () {
      var DONE = this.DONE || 4;
      if(request.readyState==4 && request.status==200){
      //if (this.readyState === DONE){
      console.log('iter: '+iter+',discid: '+discid+', parsed: '+request.responseText);
      var parsed = JSON.parse(request.responseText);
      if(parsed.trouble === 1)
      {
      // TO DO do somewthing here
      return 0;
      }
      else {
        if(#{user} !=parsed.mtext.rcv)
          {
          var vuid = parsed.mtext.rcv;
          }
        else {
          var vuid = parsed.mtext.snd;
           }
        var lastmsg = '...';
          if(parsed.mtext.msgstore)
          { 
          var lastmsg_num = parsed.mtext.msgstore.length-1;
          var lsttmstmp_msg = parseInt(parsed.mtext.msgstore[lastmsg_num].tmstmp);
          lastmsg = parsed.mtext.msgstore[lastmsg_num].txt;
          if(lastmsg.length>25) {
            lastmsg=lastmsg.slice(0,25)+'...';
          }
        // TO DO do a slice() on string if it >~30 characters so not to flood the discussion row
        }
        var insert = "<div class='row discussion' id='cid"+parsed.mtext.discid+"'><div class='col-xs-12'><div class='media' style='margin-top:0px;'><a href='/chat/"+vuid+"'><div class='media-left'><img style='height:50px;' id='img_cid"+parsed.mtext.discid+"' class='media-object img-circle' src='' alt='avatar'></div><div class='media-body' style='color:#bfbfbf;'><h4 style='color:#a7a7a7;' class='media-heading'>User №"+vuid+"</h4>"+lastmsg+"</div></div></a></div></div>";
        if(user.tmstmpstore){ 
          console.log('BREAKPOINT 1');
          console.log('lsttmstmp_msg: '+lsttmstmp_msg);
          console.log('user last timestamp: '+user.tmstmpstore.discid);
          if (lsttmstmp_msg && lsttmstmp_msg > user.tmstmpstore[discid] ){
          console.log('from timestamp store: '+parseInt(user.tmstmpstore.discid));
        insert = "<div class='row discussion' id='cid"+parsed.mtext.discid+"'><div class='col-xs-12'><span style='color:#37AFD6;font-size: 40px;position: absolute;left: 15px;top:-3;'>&#8226;</span><div class='media' style='margin-top:0px;'><a href='/chat/"+vuid+"'><div class='media-left'><img style='height:50px;' id='img_cid"+parsed.mtext.discid+"' class='media-object img-circle' src='' alt='avatar'></div><div class='media-body' style='color:#bfbfbf;'><h4 style='color:#a7a7a7;' class='media-heading'>User №"+vuid+"</h4>"+lastmsg+"</div></div></a></div></div>";
        }
        }   
            
        $('#discussions').append(insert);
        if(parseInt(parsed.mtext.rcv)===#{user})
         {getavatar(parsed.mtext.snd,discid,iter);}
       else{
        getavatar(parsed.mtext.rcv,discid,iter);
       }
      }
      }
      };
      request.open('POST', '/getdiscinfo/'+discid, true);
      request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');  // Tells server that this call is made for ajax purposes.
      request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
      //Most libraries like jQuery/Prototype/Dojo do this
      request.send();
      }
